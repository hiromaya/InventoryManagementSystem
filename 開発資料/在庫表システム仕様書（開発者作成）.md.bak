# 在庫表システム仕様書 v2.0

## 1. システム概要

### 1.1 目的
在庫表は、CP在庫マスタの情報を基に、担当者別・商品別の在庫状況を一覧表示する帳票システムです。商品勘定で作成済みのCP在庫マスタを読み取り専用で参照し、PDF形式で出力します。

### 1.2 基本方針
- **商品勘定パターン準拠**: 担当者別PDF生成→結合方式を採用
- **CP在庫マスタ参照専用**: データの更新・変更は一切行わない
- **7段階プロセス**: 商品勘定と同じ処理フローを実装

---

## 2. データ構造

### 2.1 入力データ（CP在庫マスタ）
```
CP在庫マスタ（商品勘定で作成済み）
├── 基本キー情報
│   ├── ProductCode（商品コード）
│   ├── GradeCode（等級コード）
│   ├── ClassCode（階級コード）
│   ├── ShippingMarkCode（荷印コード）
│   └── ShippingMarkManual（手入力荷印）
├── 担当者情報
│   └── ProductCategory1（担当者コード）
├── 在庫情報
│   ├── PreviousDayQuantity（前日在庫数量）
│   ├── PreviousDayAmount（前日在庫金額）
│   ├── CurrentDayQuantity（当日在庫数量）
│   └── CurrentDayAmount（当日在庫金額）
├── 日付情報
│   ├── JobDate（処理日）
│   └── LastReceiptDate（前残の月日/最終入荷日）
└── マスタ参照情報
    ├── ProductName（商品名）
    ├── GradeName（等級名）
    ├── ClassName（階級名）
    └── ShippingMarkName（荷印名）
```

### 2.2 出力データ構造（DataTable）
```
DataTableカラム構成
├── 制御情報
│   ├── RowType（行種別）
│   ├── IsPageBreak（改ページフラグ）
│   ├── IsBold（太字フラグ）
│   └── IsGrayBackground（背景色フラグ）
├── 担当者情報
│   ├── StaffCode（担当者コード）
│   └── StaffName（担当者名）
├── 表示データ
│   ├── Col1（商品コード/商品名）
│   ├── Col2（荷印）
│   ├── Col3（等級）
│   ├── Col4（階級）
│   ├── Col5（前日在庫数量）
│   ├── Col6（当日在庫数量）
│   ├── Col7（在庫金額）
│   ├── Col8（滞留マーク）
│   └── Col9（備考）
└── ページ情報
    ├── CurrentPage（現在ページ）
    └── TotalPages（総ページ数）
```

---

## 3. 処理フロー

### 3.1 7段階プロセス

#### Phase 1: データ準備
```
処理内容:
1. CP在庫マスタから対象日のデータを取得（読み取り専用）
2. 除外条件の適用
   - 当日在庫数量=0 かつ 当日在庫金額=0 の行を除外
   - 前日在庫数量=0 の行を除外（設定により変更可能）
3. データのソート（詳細は3.2参照）
```

#### Phase 2: 担当者別フラットデータ生成
```
処理内容:
1. ProductCategory1（担当者コード）でグループ化
   - NULLまたは空の場合は「000」（担当者未設定）として扱う
2. 各担当者ごとに独立したデータセットを作成
3. 行構成:
   - 担当者ヘッダー（RowType=STAFF_HEADER）
   - 商品明細（RowType=DETAIL）
   - 商品小計（RowType=PRODUCT_SUBTOTAL）
   - 担当者合計（RowType=STAFF_TOTAL）
4. 35行ごとに改ページ制御を挿入
```

#### Phase 3: 担当者別1次PDF生成（仮ページ番号）
```
処理内容:
1. 一時フォルダ作成: Output/Temp_{yyyyMMddHHmmss}/
2. 各担当者ごとにPDF生成
   - ファイル名: temp_staff_{担当者コード}.pdf
   - 仮ページ番号: 999を設定
3. FastReport処理（DataBand直接アクセス方式）
```

#### Phase 4: ページ数カウント
```
処理内容:
1. PdfSharpで各PDFのページ数を取得
2. エラー時は1ページとして処理
3. 総ページ数を計算
```

#### Phase 5: 担当者別2次PDF生成（正確なページ番号）
```
処理内容:
1. 各担当者ごとに再度PDF生成
   - ファイル名: final_staff_{担当者コード}.pdf
   - ページ番号: 現在ページ/総ページ数
2. 1次PDFファイルを削除
```

#### Phase 6: PDF結合
```
処理内容:
1. PdfSharpで全PDFを1つに結合
2. 担当者コード順（昇順）で結合
3. メモリ上でbyte[]として返却
```

#### Phase 7: クリーンアップ
```
処理内容:
1. 一時フォルダの削除
2. エラー時も確実に削除
```

### 3.2 ソート順序
```
1. 担当者コード（ProductCategory1）昇順
2. 商品コード 昇順
3. 荷印コード 昇順
4. 手入力荷印 昇順
5. 等級コード 昇順
6. 階級コード 昇順
```

---

## 4. 滞留マーク機能

### 4.1 判定ロジック
```
経過日数 = 処理日 - 前残の月日（LastReceiptDate）

判定基準:
- 11日以上20日以下: !
- 21日以上30日以下: !!
- 31日以上: !!!
```

### 4.2 表示条件
- 在庫数量 > 0 の商品のみ対象
- 前残の月日がNULLの場合は表示なし
- 明細行（RowType=DETAIL）のみ表示
- Col8カラムに出力

---

## 5. 集計ロジック

### 5.1 商品小計
```
対象: 同一商品コードの全明細
集計項目:
- 前日在庫数量の合計
- 当日在庫数量の合計
- 在庫金額の合計
```

### 5.2 担当者合計
```
対象: 担当者内の全商品
集計項目:
- 前日在庫数量の総計
- 当日在庫数量の総計
- 在庫金額の総計
```

### 5.3 増減計算（表示用）
```
在庫増減数量 = 当日在庫数量 - 前日在庫数量
在庫増減金額 = 当日在庫金額 - 前日在庫金額
```

---

## 6. FastReport技術仕様

### 6.1 テンプレートファイル
- ファイル名: InventoryList.frx
- 配置場所: FastReport/Templates/

### 6.2 DataBand問題への対処
```csharp
// FindObject/AllObjectsが機能しない問題への対処
// ReportPage.Bandsを直接走査する方式を採用

if (report.Pages[0] is FastReport.ReportPage reportPage)
{
    foreach (FastReport.BandBase band in reportPage.Bands)
    {
        if (band is FastReport.DataBand dataBand && dataBand.Name == "Data1")
        {
            dataBand.DataSource = report.GetDataSource("InventoryData");
            break;
        }
    }
}
```

### 6.3 データソース設定
- データソース名: "InventoryData"
- DataBand名: "Data1"

---

## 7. エラーハンドリング

### 7.1 PDF生成エラー
- 0バイトPDFは即座にエラーとして扱う
- PreparedPages=0の場合は詳細診断ログを出力

### 7.2 ページ数カウントエラー
- PdfSharpで読み取れない場合は1ページとして処理
- 処理は継続

### 7.3 一時ファイル管理
- エラー発生時も確実に一時フォルダを削除
- 削除失敗は警告ログのみ（処理継続）

---

## 8. パフォーマンス要件

### 8.1 メモリ管理
- 各担当者のPDF生成ごとにFastReportインスタンスを破棄
- using文による適切なリソース管理

### 8.2 処理速度
- 1000件/担当者まで: 30秒以内
- 並列処理は現時点では実装しない

---

## 9. 出力仕様

### 9.1 ファイル形式
- 最終出力: PDF形式（byte[]）
- 文字コード: UTF-8
- フォント: 游ゴシック 9pt

### 9.2 用紙設定
- サイズ: A4横
- 余白: 上下左右10mm

### 9.3 表示形式
- 数値: カンマ区切り
- 小数点: 在庫数量2桁、金額0桁
- ゼロサプレス: 実施

---

## 10. 制約事項

### 10.1 データ更新の禁止
- CP在庫マスタへの書き込みは一切行わない
- 全ての計算は表示用の一時的なもの

### 10.2 依存関係
- CP在庫マスタは商品勘定で事前作成が必要
- 前残の月日は商品勘定で設定済みが前提

### 10.3 処理順序
- 商品勘定実行後に在庫表を実行
- 同一日付での再実行は可能

---

## 11. 今後の拡張予定

### 11.1 並列処理
- 担当者別PDF生成の並列化（Phase 2で検討）

### 11.2 出力オプション
- Excel形式での出力（要件確定後）
- CSV形式での出力（要件確定後）

---

**作成日**: 2025年9月8日  
**バージョン**: 2.0  
**作成者**: 在庫管理システム開発チーム