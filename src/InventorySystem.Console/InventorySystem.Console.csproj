<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0-windows7.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <EnableWindowsTargeting>true</EnableWindowsTargeting>
    <DefineConstants Condition="'$(OS)' == 'Windows_NT'">$(DefineConstants);WINDOWS</DefineConstants>
    <DefineConstants Condition="'$(OS)' != 'Windows_NT'">$(DefineConstants);LINUX</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="8.0.0" />
    <PackageReference Include="Serilog" Version="4.1.0" />
    <PackageReference Include="Serilog.Extensions.Hosting" Version="8.0.0" />
    <PackageReference Include="Serilog.Sinks.Console" Version="5.0.1" />
    <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="../InventorySystem.Core/InventorySystem.Core.csproj" />
    <ProjectReference Include="../InventorySystem.Data/InventorySystem.Data.csproj" />
    <ProjectReference Include="../InventorySystem.Import/InventorySystem.Import.csproj" />
    <ProjectReference Include="../InventorySystem.Reports/InventorySystem.Reports.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="appsettings.Development.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="appsettings.Production.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <!-- FastReportテンプレートを確実にコピーするTarget -->
  <Target Name="CopyFastReportTemplates" AfterTargets="Build" Condition="'$(OS)' == 'Windows_NT'">
    <MakeDir Directories="$(OutputPath)FastReport\Templates" />
    <ItemGroup>
      <FastReportTemplates Include="..\InventorySystem.Reports\FastReport\Templates\*.frx" />
    </ItemGroup>
    <Copy SourceFiles="@(FastReportTemplates)" 
          DestinationFolder="$(OutputPath)FastReport\Templates" 
          SkipUnchangedFiles="false" />
    <Message Text="FastReportテンプレートをコピーしました: $(OutputPath)FastReport\Templates" Importance="high" />
    <Message Text="コピーされたファイル数: @(FastReportTemplates->Count())" Importance="high" />
  </Target>

  <!-- ビルド後にFastReport DLLをコピー (Windows only) -->
  <Target Name="CopyFastReportFiles" AfterTargets="Build" Condition="'$(OS)' == 'Windows_NT'">
    <ItemGroup>
      <FastReportFiles Include="C:\Program Files (x86)\FastReports\FastReport .NET Trial\*.dll" />
    </ItemGroup>
    <Copy SourceFiles="@(FastReportFiles)" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" />
  </Target>

  <!-- Exclude non-existent resx files -->
  <ItemGroup>
    <EmbeddedResource Remove="**/*.resx" />
  </ItemGroup>

</Project>