-- Migration 008: Add indexes for unmatch check performance optimization
-- Author: Claude Code with Gemini CLI consultation
-- Date: 2025-07-12
-- Purpose: Add indexes to optimize date-filtered unmatch check queries

BEGIN TRY
    BEGIN TRANSACTION;
    
    PRINT 'üîß Creating indexes for unmatch check performance optimization...';
    
    -- 1. InventoryMaster: „Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Éï„É©„Ç∞„Å®Êó•‰ªò„Å´„Çà„Çã„Éï„Ç£„É´„Çø„É™„É≥„Ç∞ÊúÄÈÅ©Âåñ
    IF NOT EXISTS (
        SELECT 1 
        FROM sys.indexes 
        WHERE object_id = OBJECT_ID('InventoryMaster') 
        AND name = 'IX_InventoryMaster_IsActive_JobDate'
    )
    BEGIN
        CREATE INDEX IX_InventoryMaster_IsActive_JobDate 
        ON InventoryMaster(IsActive, JobDate) 
        INCLUDE (ProductCode, GradeCode, ClassCode, ShippingMarkCode, ShippingMarkName, CurrentStock, CurrentStockAmount);
        
        PRINT '‚úÖ InventoryMaster index for IsActive/JobDate created';
    END
    ELSE
    BEGIN
        PRINT '‚ö†Ô∏è InventoryMaster IsActive/JobDate index already exists';
    END
    
    -- 2. SalesVouchers: Êó•‰ªò„Éï„Ç£„É´„Çø„É™„É≥„Ç∞ÊúÄÈÅ©Âåñ
    IF NOT EXISTS (
        SELECT 1 
        FROM sys.indexes 
        WHERE object_id = OBJECT_ID('SalesVouchers') 
        AND name = 'IX_SalesVouchers_JobDate_VoucherType'
    )
    BEGIN
        CREATE INDEX IX_SalesVouchers_JobDate_VoucherType 
        ON SalesVouchers(JobDate, VoucherType, DetailType) 
        INCLUDE (ProductCode, GradeCode, ClassCode, ShippingMarkCode, ShippingMarkName, Quantity);
        
        PRINT '‚úÖ SalesVouchers index for JobDate/VoucherType created';
    END
    ELSE
    BEGIN
        PRINT '‚ö†Ô∏è SalesVouchers JobDate/VoucherType index already exists';
    END
    
    -- 3. PurchaseVouchers: Êó•‰ªò„Éï„Ç£„É´„Çø„É™„É≥„Ç∞ÊúÄÈÅ©Âåñ
    IF NOT EXISTS (
        SELECT 1 
        FROM sys.indexes 
        WHERE object_id = OBJECT_ID('PurchaseVouchers') 
        AND name = 'IX_PurchaseVouchers_JobDate_VoucherType'
    )
    BEGIN
        CREATE INDEX IX_PurchaseVouchers_JobDate_VoucherType 
        ON PurchaseVouchers(JobDate, VoucherType, DetailType) 
        INCLUDE (ProductCode, GradeCode, ClassCode, ShippingMarkCode, ShippingMarkName, Quantity);
        
        PRINT '‚úÖ PurchaseVouchers index for JobDate/VoucherType created';
    END
    ELSE
    BEGIN
        PRINT '‚ö†Ô∏è PurchaseVouchers JobDate/VoucherType index already exists';
    END
    
    -- 4. InventoryAdjustments: Êó•‰ªò„Éï„Ç£„É´„Çø„É™„É≥„Ç∞ÊúÄÈÅ©Âåñ
    IF NOT EXISTS (
        SELECT 1 
        FROM sys.indexes 
        WHERE object_id = OBJECT_ID('InventoryAdjustments') 
        AND name = 'IX_InventoryAdjustments_JobDate_CategoryCode'
    )
    BEGIN
        CREATE INDEX IX_InventoryAdjustments_JobDate_CategoryCode 
        ON InventoryAdjustments(JobDate, VoucherType, DetailType, CategoryCode) 
        INCLUDE (ProductCode, GradeCode, ClassCode, ShippingMarkCode, ShippingMarkName, Quantity);
        
        PRINT '‚úÖ InventoryAdjustments index for JobDate/CategoryCode created';
    END
    ELSE
    BEGIN
        PRINT '‚ö†Ô∏è InventoryAdjustments JobDate/CategoryCode index already exists';
    END
    
    -- 5. 5È†ÖÁõÆ„Ç≠„ÉºÊ§úÁ¥¢Áî®„ÅÆË§áÂêà„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÔºàCpInventoryMasterÔºâ
    IF NOT EXISTS (
        SELECT 1 
        FROM sys.indexes 
        WHERE object_id = OBJECT_ID('CpInventoryMaster') 
        AND name = 'IX_CpInventoryMaster_5ItemKey_DataSetId'
    )
    BEGIN
        CREATE INDEX IX_CpInventoryMaster_5ItemKey_DataSetId 
        ON CpInventoryMaster(DataSetId, ProductCode, GradeCode, ClassCode, ShippingMarkCode, ShippingMarkName);
        
        PRINT '‚úÖ CpInventoryMaster 5-item key index created';
    END
    ELSE
    BEGIN
        PRINT '‚ö†Ô∏è CpInventoryMaster 5-item key index already exists';
    END
    
    -- 6. UPDATE STATISTICS: Êñ∞„Åó„ÅÑ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÅÆÁµ±Ë®àÊÉÖÂ†±„ÇíÊõ¥Êñ∞
    PRINT 'üìä Updating statistics for new indexes...';
    UPDATE STATISTICS InventoryMaster;
    UPDATE STATISTICS SalesVouchers;
    UPDATE STATISTICS PurchaseVouchers;
    UPDATE STATISTICS InventoryAdjustments;
    UPDATE STATISTICS CpInventoryMaster;
    
    COMMIT TRANSACTION;
    PRINT 'üéâ Migration 008 completed successfully - Unmatch optimization indexes added';
    
    -- „Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÊ§úË®ºÁî®„ÅÆ„ÇØ„Ç®„É™‰æã„ÇíÂá∫Âäõ
    PRINT '';
    PRINT 'üìã Performance verification queries:';
    PRINT '-- Test active inventory filtering:';
    PRINT 'SELECT COUNT(*) FROM InventoryMaster WHERE IsActive = 1 AND JobDate <= ''2025-06-30'';';
    PRINT '-- Test sales voucher filtering:';
    PRINT 'SELECT COUNT(*) FROM SalesVouchers WHERE JobDate <= ''2025-06-30'' AND VoucherType IN (''51'', ''52'') AND DetailType IN (''1'', ''2'');';
    
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION;
    
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();
    
    PRINT '‚ùå Migration 008 failed: ' + @ErrorMessage;
    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
END CATCH;